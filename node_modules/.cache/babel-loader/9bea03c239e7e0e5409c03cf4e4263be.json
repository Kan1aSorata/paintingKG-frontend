{"remainingRequest":"/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/node_modules/babel-loader/lib/index.js!/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/src/pages/detail/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/src/pages/detail/index.vue","mtime":1605980177000},{"path":"/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fengyuhe/Desktop/大创/2018011373-刘朔言-2020大创材料/代码/paintKG前端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fengyuhe/Desktop/\\u5927\\u521B/2018011373-\\u5218\\u6714\\u8A00-2020\\u5927\\u521B\\u6750\\u6599/\\u4EE3\\u7801/paintKG\\u524D\\u7AEF/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Chart from 'roc-charts';\nexport default {\n  name: \"index\",\n  data: function data() {\n    return {\n      paintingId: 1,\n      chart: null,\n      paintingVisible: false,\n      updatePaintingDescriptionForm: {\n        description: ''\n      },\n      paintDetail: {},\n      painterDetail: {},\n      chartData: {\n        nodes: [{\n          id: '1',\n          // 节点的 id (必选)\n          name: 'St. Sebastian',\n          // 图谱中显示在节点下面的文字\n          extend: false,\n          // 节点是否可扩展。隐藏节点相关功能，为 true 时右上角显示可扩展+号图标\n          selected: false,\n          // 是否处于选中状态。选中时会显示边框\n          degree: 0,\n          // 节点度数，主要用于层级类图\n          style: {\n            // 节点样式\n            image: this.imgTest,\n            // 节点图标 dataURI\n            hide: false,\n            // 是否隐藏节点\n            // 节点的半径，优先级高于 size\n            r: 30\n          }\n        }, {\n          id: '2',\n          // 节点的 id (必选)\n          name: 'The Holy Trinity',\n          // 图谱中显示在节点下面的文字\n          extend: false,\n          // 节点是否可扩展。隐藏节点相关功能，为 true 时右上角显示可扩展+号图标\n          selected: false,\n          // 是否处于选中状态。选中时会显示边框\n          degree: 0,\n          // 节点度数，主要用于层级类图\n          style: {\n            // 节点样式\n            image: this.imgTest,\n            // 节点图标 dataURI\n            hide: false,\n            // 是否隐藏节点\n            // 节点的半径，优先级高于 size\n            r: 30\n          }\n        }, {\n          id: '3',\n          // 节点的 id (必选)\n          name: 'Madonna del Prato',\n          // 图谱中显示在节点下面的文字\n          extend: false,\n          // 节点是否可扩展。隐藏节点相关功能，为 true 时右上角显示可扩展+号图标\n          selected: false,\n          // 是否处于选中状态。选中时会显示边框\n          degree: 0,\n          // 节点度数，主要用于层级类图\n          style: {\n            // 节点样式\n            image: this.imgTest,\n            // 节点图标 dataURI\n            hide: false,\n            // 是否隐藏节点\n            // 节点的半径，优先级高于 size\n            r: 30\n          }\n        }, {\n          id: '4',\n          // 节点的 id (必选)\n          name: 'The Madonna and Child ',\n          // 图谱中显示在节点下面的文字\n          extend: false,\n          // 节点是否可扩展。隐藏节点相关功能，为 true 时右上角显示可扩展+号图标\n          selected: false,\n          // 是否处于选中状态。选中时会显示边框\n          degree: 0,\n          // 节点度数，主要用于层级类图\n          style: {\n            // 节点样式\n            image: this.imgTest,\n            // 节点图标 dataURI\n            hide: false,\n            // 是否隐藏节点\n            // 节点的半径，优先级高于 size\n            r: 30\n          }\n        }],\n        links: [{\n          from: '1',\n          // 起始 node 节点 id（必选）\n          to: '2',\n          // 目标 node 节点 id （必选）\n          text: 'same era',\n          // 线上的文字\n          directionless: false,\n          // 是否为无向线（没有箭头的直线）\n          style: {\n            dashed: false // 是否为虚线，默认为 false\n\n          }\n        }, {\n          from: '2',\n          // 起始 node 节点 id（必选）\n          to: '3',\n          // 目标 node 节点 id （必选）\n          text: 'same era',\n          // 线上的文字\n          directionless: false,\n          // 是否为无向线（没有箭头的直线）\n          style: {\n            dashed: false // 是否为虚线，默认为 false\n\n          }\n        }, {\n          from: '1',\n          // 起始 node 节点 id（必选）\n          to: '3',\n          // 目标 node 节点 id （必选）\n          text: 'same era',\n          // 线上的文字\n          directionless: false,\n          // 是否为无向线（没有箭头的直线）\n          style: {\n            dashed: false // 是否为虚线，默认为 false\n\n          }\n        }, {\n          from: '3',\n          // 起始 node 节点 id（必选）\n          to: '4',\n          // 目标 node 节点 id （必选）\n          text: 'similar type',\n          // 线上的文字\n          directionless: false,\n          // 是否为无向线（没有箭头的直线）\n          style: {\n            dashed: false // 是否为虚线，默认为 false\n\n          }\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.paintingId = this.$route.params.id;\n  },\n  mounted: function mounted() {\n    this.getPaintingInfo();\n    this.getGraph();\n  },\n  methods: {\n    getPaintingInfo: function () {\n      var _getPaintingInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$axios.get('http://localhost:8080/type-id', {\n                  headers: {\n                    type: '2',\n                    id: this.paintingId\n                  }\n                });\n\n              case 2:\n                data = _context.sent;\n                this.paintDetail = data.data;\n                _context.next = 6;\n                return this.getPainterInfo();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPaintingInfo() {\n        return _getPaintingInfo.apply(this, arguments);\n      }\n\n      return getPaintingInfo;\n    }(),\n    getGraph: function () {\n      var _getGraph = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$axios.get('http://localhost:8080/id-graph?type=2&id=' + this.paintingId);\n\n              case 2:\n                data = _context2.sent;\n                this.chartData.nodes = data.data.nodes;\n                this.chartData.links = data.data.links;\n                this.initGraph();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getGraph() {\n        return _getGraph.apply(this, arguments);\n      }\n\n      return getGraph;\n    }(),\n    getPainterInfo: function () {\n      var _getPainterInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$axios.get('http://localhost:8080/type-name?type=1&name=' + this.paintDetail.maker);\n\n              case 2:\n                data = _context3.sent;\n                this.painterDetail = data.data[0]; // eslint-disable-next-line no-console\n                //   console.log(data.data[0])\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getPainterInfo() {\n        return _getPainterInfo.apply(this, arguments);\n      }\n\n      return getPainterInfo;\n    }(),\n\n    /**\n     * @description 初始化知识图谱\n     * @returns {boolean}\n     */\n    initGraph: function initGraph() {\n      var _this = this;\n\n      var config = {\n        core: {\n          // animation: false,\n          initPlugin: true\n        },\n        plugin: {\n          rightKey: {\n            keys: [{\n              name: '隐藏节点',\n              click: function click(params) {\n                var node = params.target.source;\n\n                _this.chart1.util.hideNodes([node.id]);\n              },\n              isShow: function isShow(params) {\n                if (params.isNode) {\n                  return true;\n                }\n              }\n            }, {\n              name: '删除节点',\n              click: function click(params) {\n                var node = params.target.source;\n\n                _this.chart1.util.deleteNodes([node.id]);\n              },\n              isShow: function isShow(params) {\n                if (params.isNode) {\n                  return true;\n                }\n              }\n            }, {\n              name: '复位',\n              click: function click(params) {\n                // params.$chart.reset();\n                // 调用插件的方法，被调用的插件必须被实例化\n                params.plugins.reset.onClick();\n              }\n            }]\n          }\n        }\n      };\n      var chart = new Chart({\n        id: 'test-canvas',\n        // 绘制图谱 dom 的 id\n        type: 'force',\n        // 图谱类型\n        data: this.chartData // 图谱数据\n\n      });\n      chart.init(config); // 调用 init 方法绘图，配置项可选\n\n      Chart.changeConfig({\n        text: {\n          align: 'center',\n          verticalAlign: 'middle',\n          color: '#FFF',\n          fontSize: 12\n        }\n      });\n      document.getElementsByClassName('searchNodeContainer-roc')[0].remove();\n    },\n\n    /**\n     * @description 打开画作编辑器\n     */\n    openPaintingDescriptionEditor: function openPaintingDescriptionEditor() {\n      this.paintingVisible = true;\n    },\n\n    /**\n     * @description 跳转到作者详情页\n     * @param painterId\n     */\n    routeToPainter: function routeToPainter(painterId) {\n      // eslint-disable-next-line\n      console.log(painterId);\n      this.$router.push('/painterDetail/' + painterId);\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"detail-container\">\n        <!-- 两栏布局 -->\n        <div class=\"painting-cnt\">\n            <div class=\"left-cnt\">\n                <img :src=\"paintDetail.picture\" class=\"pic\" alt=\"pic1\" />\n\n                <el-card class=\"box-card\">\n                    <div class=\"title\"><i class=\"el-icon-brush\"></i> Painter</div>\n                    <div class=\"author-picture-cnt link\" @click=\"routeToPainter(painterDetail.id)\">\n                        <img :src=\"painterDetail.image\" alt=\"author\" class=\"author-picture\"/>\n                    </div>\n\n                  <div class=\"item\"> <el-tag type=\"success\">Country</el-tag> <span class=\"font\">{{ painterDetail.country }}</span></div>\n                  <div class=\"item\"> <el-tag type=\"warning\">Birth</el-tag> <span class=\"font\">{{ painterDetail.birth }}</span></div>\n                  <div class=\"item\"> <el-tag type=\"danger\">Death</el-tag> <span class=\"font\">{{ painterDetail.death }}</span></div>\n\n\n                    <el-divider content-position=\"center\" class=\"divider\">description</el-divider>\n\n                    <div class=\"painter-description-cnt\">\n                        <div class=\"empty-cnt\" v-if=\"false\">\n                            <img src=\"../../assets/empty.png\" alt=\"empty\" class=\"empty\"/>\n                            <p class=\"empty-text\">作者描述为空，我们正在努力获取 :)</p>\n                        </div>\n\n                        <div class=\"desc\">\n                          {{painterDetail.description}}\n                        </div>\n                    </div>\n                </el-card>\n            </div>\n            <div class=\"right-cnt\">\n                <el-card class=\"box-card\">\n                    <div class=\"title\"><i class=\"el-icon-reading\"></i> Painting </div>\n                    <div class=\"item\"> <el-tag>name</el-tag> <span class=\"font\">{{ paintDetail.name }}</span></div>\n                    <div class=\"item\"> <el-tag type=\"success\">museum</el-tag> <span class=\"font\">{{ paintDetail.museum }}</span></div>\n                    <div class=\"item link\" @click=\"routeToPainter\"> <el-tag type=\"warning\">painter name</el-tag> <span class=\"font\">{{ paintDetail.maker }}</span></div>\n                    <div class=\"item\"> <el-tag type=\"danger\">time</el-tag> <span class=\"font\">{{ paintDetail.createdTime }}</span></div>\n                    <div class=\"item\"> <el-tag type=\"info\">type</el-tag> <span class=\"font\">{{ paintDetail.type }}</span></div>\n\n                    <el-divider content-position=\"center\" class=\"divider\">painting description</el-divider>\n\n                    <div class=\"painting-description-cnt\">\n                        <div class=\"empty-cnt\" v-if=\"false\">\n                            <img src=\"../../assets/empty.png\" alt=\"empty\" class=\"empty\"/>\n                            <p class=\"empty-text\">本画作描述为空，邀请您一起来完善！</p>\n                            <el-button type=\"success\" @click=\"openPaintingDescriptionEditor\" plain>我要完善 ^_^ </el-button>\n                        </div>\n\n                        <div class=\"desc\">\n                          \"Madonna del Prato\" (Madonna del Prato), also known as \"Virgin and Child and Saint John\", was created by Raphael between 1505 and 1506. It is now in the Kunsthistorisches Museum in Viana, Austria. \"The Madonna on the Grass\" is a wood engraving created by a mixture of tempera and oil painting. The hem of the Virgin's dress indicates the year when the painting was completed: 1506. This painting for the chapel of the monks in the Basilica of San Mar in Florence is one of many paintings of the Virgin and Child and St. John the Little by Raphael during his Florentine period. Since the 16th century, when creating portraits, many painters have abandoned the idealized expressions they used in drawing religious subjects, and adopted realistic techniques to faithfully reproduce the appearance and spiritual world of the expressing objects. The founder of this expression is Raphael. During this period, Raphael lived in Florence for a long time, which facilitated his close study of the works of Leonardo da Vinci and Michelangelo. The appearance of the Virgin and Child with St. John the Little is very common in 15th-century Italian paintings, and Raphael's later paintings on this theme also achieved great success.\n                        </div>\n                    </div>\n\n                </el-card>\n\n                <div id=\"test-canvas\" style=\"width:100%; height: 500px;\"></div>\n            </div>\n        </div>\n\n        <el-dialog title=\"完善作品信息\" :visible.sync=\"paintingVisible\" width=\"30%\">\n            <span>感谢您为我们完善该幅画作的信息 ^_^ </span>\n            <el-input\n                    type=\"textarea\"\n                    class=\"painting-description-textarea\"\n                    :rows=\"2\"\n                    placeholder=\"请输入内容\"\n                    v-model=\"updatePaintingDescriptionForm.description\">\n            </el-input>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"paintingVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"paintingVisible = false\">提 交</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    import Chart from 'roc-charts';\n    export default {\n        name: \"index\",\n\n        data() {\n            return {\n                paintingId: 1,\n                chart: null,\n                paintingVisible: false,\n                updatePaintingDescriptionForm: {\n                    description: ''\n                },\n                paintDetail: {},\n                painterDetail: {},\n                chartData: {\n                    nodes: [\n                        {\n                            id: '1',  // 节点的 id (必选)\n                            name: 'St. Sebastian',  // 图谱中显示在节点下面的文字\n                            extend: false, // 节点是否可扩展。隐藏节点相关功能，为 true 时右上角显示可扩展+号图标\n                            selected: false,  // 是否处于选中状态。选中时会显示边框\n                            degree: 0,  // 节点度数，主要用于层级类图\n                            style: {  // 节点样式\n                                image: this.imgTest,  // 节点图标 dataURI\n                                hide: false,  // 是否隐藏节点\n                                // 节点的半径，优先级高于 size\n                                r: 30,\n                            }\n                        },\n                        {\n                            id: '2',  // 节点的 id (必选)\n                            name: 'The Holy Trinity',  // 图谱中显示在节点下面的文字\n                            extend: false, // 节点是否可扩展。隐藏节点相关功能，为 true 时右上角显示可扩展+号图标\n                            selected: false,  // 是否处于选中状态。选中时会显示边框\n                            degree: 0,  // 节点度数，主要用于层级类图\n                            style: {  // 节点样式\n                                image: this.imgTest,  // 节点图标 dataURI\n                                hide: false,  // 是否隐藏节点\n                                // 节点的半径，优先级高于 size\n                                r: 30,\n                            }\n                        },\n                        {\n                            id: '3',  // 节点的 id (必选)\n                            name: 'Madonna del Prato',  // 图谱中显示在节点下面的文字\n                            extend: false, // 节点是否可扩展。隐藏节点相关功能，为 true 时右上角显示可扩展+号图标\n                            selected: false,  // 是否处于选中状态。选中时会显示边框\n                            degree: 0,  // 节点度数，主要用于层级类图\n                            style: {  // 节点样式\n                                image: this.imgTest,  // 节点图标 dataURI\n                                hide: false,  // 是否隐藏节点\n                                // 节点的半径，优先级高于 size\n                                r: 30,\n                            }\n                        },\n                        {\n                            id: '4',  // 节点的 id (必选)\n                            name: 'The Madonna and Child ',  // 图谱中显示在节点下面的文字\n                            extend: false, // 节点是否可扩展。隐藏节点相关功能，为 true 时右上角显示可扩展+号图标\n                            selected: false,  // 是否处于选中状态。选中时会显示边框\n                            degree: 0,  // 节点度数，主要用于层级类图\n                            style: {  // 节点样式\n                                image: this.imgTest,  // 节点图标 dataURI\n                                hide: false,  // 是否隐藏节点\n                                // 节点的半径，优先级高于 size\n                                r: 30,\n                            }\n                        }\n                    ],\n                    links: [\n                        {\n                            from: '1',  // 起始 node 节点 id（必选）\n                            to: '2',  // 目标 node 节点 id （必选）\n                            text: 'same era',  // 线上的文字\n                            directionless: false,  // 是否为无向线（没有箭头的直线）\n                            style: {\n                                dashed: false,  // 是否为虚线，默认为 false\n                            }\n                        },\n                        {\n                            from: '2',  // 起始 node 节点 id（必选）\n                            to: '3',  // 目标 node 节点 id （必选）\n                            text: 'same era',  // 线上的文字\n                            directionless: false,  // 是否为无向线（没有箭头的直线）\n                            style: {\n\n                                dashed: false,  // 是否为虚线，默认为 false\n                            }\n                        },\n                        {\n                            from: '1',  // 起始 node 节点 id（必选）\n                            to: '3',  // 目标 node 节点 id （必选）\n                            text: 'same era',  // 线上的文字\n                            directionless: false,  // 是否为无向线（没有箭头的直线）\n                            style: {\n                                dashed: false,  // 是否为虚线，默认为 false\n                            }\n                        },\n                        {\n                            from: '3',  // 起始 node 节点 id（必选）\n                            to: '4',  // 目标 node 节点 id （必选）\n                            text: 'similar type',  // 线上的文字\n                            directionless: false,  // 是否为无向线（没有箭头的直线）\n                            style: {\n                                dashed: false,  // 是否为虚线，默认为 false\n                            }\n                        }\n                    ]\n                }\n            }\n        },\n        created() {\n          this.paintingId = this.$route.params.id;\n        },\n      mounted() {\n            this.getPaintingInfo();\n            this.getGraph();\n        },\n        methods: {\n            async getPaintingInfo() {\n              let data = await this.$axios.get('http://localhost:8080/type-id', {\n                headers: {\n                  type: '2',\n                  id: this.paintingId\n                }\n              })\n              this.paintDetail = data.data;\n              await this.getPainterInfo();\n            },\n          async getGraph() {\n            let data = await this.$axios.get('http://localhost:8080/id-graph?type=2&id=' + this.paintingId);\n            this.chartData.nodes = data.data.nodes\n            this.chartData.links = data.data.links\n            this.initGraph();\n          },\n\n          async getPainterInfo() {\n              //http://localhost:8080/type-name?name=莱昂纳多·达·芬奇&type=1\n              let data = await this.$axios.get('http://localhost:8080/type-name?type=1&name=' + this.paintDetail.maker);\n              this.painterDetail = data.data[0];\n            // eslint-disable-next-line no-console\n            //   console.log(data.data[0])\n          },\n            /**\n             * @description 初始化知识图谱\n             * @returns {boolean}\n             */\n            initGraph() {\n                const config = {\n                    core: {\n                        // animation: false,\n                        initPlugin: true\n                    },\n                    plugin: {\n                        rightKey: {\n                            keys: [\n                                {\n                                    name: '隐藏节点',\n                                    click: (params) => {\n                                        const node = params.target.source;\n                                        this.chart1.util.hideNodes([node.id]);\n                                    },\n                                    isShow(params) {\n                                        if (params.isNode) {\n                                            return true;\n                                        }\n                                    }\n                                },\n                                {\n                                    name: '删除节点',\n                                    click: (params) => {\n                                        const node = params.target.source;\n                                        this.chart1.util.deleteNodes([node.id]);\n                                    },\n                                    isShow(params) {\n                                        if (params.isNode) {\n                                            return true;\n                                        }\n                                    }\n                                },\n                                {\n                                    name: '复位',\n                                    click(params) {\n                                        // params.$chart.reset();\n                                        // 调用插件的方法，被调用的插件必须被实例化\n                                        params.plugins.reset.onClick();\n                                    },\n                                },\n                            ]\n                        }\n                    }\n                };\n\n                const chart = new Chart({\n                    id: 'test-canvas',  // 绘制图谱 dom 的 id\n                    type: 'force',  // 图谱类型\n                    data: this.chartData,  // 图谱数据\n                });\n                chart.init(config);  // 调用 init 方法绘图，配置项可选\n                Chart.changeConfig({\n                    text: {\n                        align: 'center',\n                        verticalAlign: 'middle',\n                        color: '#FFF',\n                        fontSize: 12,\n                    }\n                });\n\n                document.getElementsByClassName('searchNodeContainer-roc')[0].remove();\n\n            },\n            /**\n             * @description 打开画作编辑器\n             */\n            openPaintingDescriptionEditor() {\n                this.paintingVisible = true;\n            },\n            /**\n             * @description 跳转到作者详情页\n             * @param painterId\n             */\n            routeToPainter(painterId) {\n                // eslint-disable-next-line\n                console.log(painterId);\n                this.$router.push('/painterDetail/'+painterId);\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" >\n    .detail-container {\n        margin-left: 150px;\n        margin-right: 150px;\n        margin-top: 30px;\n\n        .painting-description-textarea {\n            margin-top: 15px;\n            textarea {\n                background: rgba(0,0,0,0.1) !important;\n\n            }\n        }\n\n        .painting-cnt {\n\n\n            .left-cnt {\n                width: 300px;\n                float: left;\n\n                .pic {\n                    width: 100%;\n                    border-radius: 4px;\n                }\n\n                .box-card {\n                    margin-top: 20px;\n                    .title {\n                        font-size: 18px;\n                        font-weight: bold;\n                        margin-bottom: 20px;\n                        text-align: center;\n                    }\n\n                    .item {\n                        font-weight: bold;\n                        margin-bottom: 20px;\n\n                        .font {\n                            margin-left: 20px;\n                            color: #F2F8FE;\n                        }\n                    }\n\n                    .link {\n                        cursor: pointer;\n                    }\n\n                    .author-picture-cnt {\n                        text-align: center;\n                        margin-bottom: 20px;\n\n                        .author-picture {\n                            width: 100px;\n                            border-radius: 6px;\n                        }\n                    }\n\n                    .divider {\n                        margin-top: 30px;\n                        background: #606266;\n                        .el-divider__text {\n                            background: #606266;\n                        }\n                    }\n\n                    .painter-description-cnt {\n\n                        .empty-cnt {\n                            text-align: center;\n                            .empty {\n                                width: 150px;\n                                opacity: 0.5;\n                            }\n                            .empty-text {\n                                color: #606266;\n                                font-size: 14px;\n                            }\n                        }\n\n                    }\n\n                }\n            }\n\n            .right-cnt {\n                margin-left: 300px;\n                padding-left: 30px;\n                padding-right: 30px;\n\n                .box-card {\n\n                    .link {\n                        cursor: pointer;\n                    }\n\n                    .title {\n                        font-size: 26px;\n                        font-weight: bold;\n                        margin-bottom: 20px;\n                    }\n\n                    .item {\n                        font-weight: bold;\n                        margin-bottom: 20px;\n\n                        .font {\n                            margin-left: 20px;\n                            color: #F2F8FE;\n                        }\n                    }\n\n                    .divider {\n                        margin-top: 30px;\n                        background: #606266;\n                        .el-divider__text {\n                            background: #606266;\n                        }\n                    }\n\n                    .painting-description-cnt {\n\n                        .empty-cnt {\n                            text-align: center;\n                            .empty {\n                                width: 150px;\n                                opacity: 0.5;\n                            }\n                            .empty-text {\n                                color: #606266;\n                                font-size: 14px;\n                            }\n                        }\n\n                    }\n\n                }\n\n                #test-canvas {\n                    margin-top: 15px;\n                    margin-bottom: 15px;\n                    border-radius: 6px;\n                    background: #27262F;\n                }\n\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/pages/detail"}]}